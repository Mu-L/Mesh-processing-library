rel ?= 1#  0=debug or 1=release  (usually 1)
x64 = 1

# Within CYGWIN, -std=c++20 (or c++14 or c++17) omits: popen(), pclose(), usleep(), gethostname(), setenv(), getenv().
CXX_STD = gnu++20

ifeq ($(CC),clang)              # make CONFIG=cygwin CC=clang ...
  include $(dir $(lastword $(MAKEFILE_LIST)))/Makefile_base_clang
else                            # default is gcc compiler
  include $(dir $(lastword $(MAKEFILE_LIST)))/Makefile_base_gcc
  # GCC on Cygwin has a long-standing stack alignment problem that makes AVX unusable.
  # https://stackoverflow.com/questions/55054592/avx-load-instruction-fails-on-cygwin
  # https://www.mail-archive.com/cygwin@cygwin.com/msg174673.html
  ccommon += -mno-avx -msse4.2
  # Too many false positives.
  cxxall += -Wno-stringop-overflow
  # For PEDANTIC=1, false positives on "const T& elem = grid[y][x];" in GCC 13+.  No easy workarounds.
  cxxall += -Wno-dangling-reference
endif

graphics_libs ?= -lGL -lX11 -lopengl32#  -lXext

# Stack dump:
# gdb --batch -ex run -ex where --args ~/git/hh_src/bin/cygwin/HTest -dividebyzero
# gdb --batch -ex run -ex where --args ~/git/hh_src/bin/cygwin/HTest -accessviolation

# "The default during compilation is to produce a console application. It you are writing a GUI program, you
# should either compile with -mwindows as explained above, or add the string "-Wl,--subsystem,windows" to the
# GCC command line."

# See ~/bin/stackdump, a script I wrote to parse the hex values in *.stackdump and gather info using gdb
# (set path=(~/git/hh_src/bin/cygwin $path:q); test_coredump)
